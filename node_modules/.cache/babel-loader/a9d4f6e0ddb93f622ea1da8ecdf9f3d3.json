{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Rehan.Shaikh\\\\Desktop\\\\e-commerce-site-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rehan.Shaikh\\\\Desktop\\\\e-commerce-site-master\\\\src\\\\context.js\";\nimport React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let products = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        products = [...products, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products\n        };\n      }, this.checkCartItems);\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: [...tempProducts],\n          cart: [...this.state.cart, product],\n          detailProduct: _objectSpread({}, product)\n        };\n      }, this.addTotals);\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => {\n        return item.id === id;\n      });\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, this.addTotals);\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => {\n        return item.id === id;\n      });\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, this.addTotals);\n      }\n    };\n\n    this.getTotals = () => {\n      // const subTotal = this.state.cart\n      //   .map(item => item.total)\n      //   .reduce((acc, curr) => {\n      //     acc = acc + curr;\n      //     return acc;\n      //   }, 0);\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      return {\n        subTotal,\n        tax,\n        total\n      };\n    };\n\n    this.addTotals = () => {\n      const totals = this.getTotals();\n      this.setState(() => {\n        return {\n          cartSubTotal: totals.subTotal,\n          cartTax: totals.tax,\n          cartTotal: totals.total\n        };\n      }, () => {// console.log(this.state);\n      });\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      tempCart = tempCart.filter(item => {\n        return item.id !== id;\n      });\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, this.addTotals);\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["C:\\Users\\Rehan.Shaikh\\Desktop\\e-commerce-site-master\\src\\context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","forEach","item","singleItem","setState","checkCartItems","getItem","id","product","find","handleDetail","addToCart","tempProducts","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","removeItem","getTotals","subTotal","map","tempTax","tax","parseFloat","toFixed","totals","removedProduct","filter","clearCart","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n    state = {\n        products: [],\n        detailProduct: detailProduct,\n        cart: [],\n        modalOpen: false,\n        modalProduct: detailProduct,\n        cartSubTotal: 0,\n        cartTax: 0,\n        cartTotal: 0\n    };\n    componentDidMount() {\n        this.setProducts();\n    }\n\n    setProducts = () => {\n        let products = [];\n        storeProducts.forEach(item => {\n            const singleItem = { ...item };\n            products = [...products, singleItem];\n        });\n        this.setState(() => {\n            return { products };\n        }, this.checkCartItems);\n    };\n\n    getItem = id => {\n        const product = this.state.products.find(item => item.id === id);\n        return product;\n    };\n    handleDetail = id => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return { detailProduct: product };\n        });\n    };\n    addToCart = id => {\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItem(id));\n        const product = tempProducts[index];\n        product.inCart = true;\n        product.count = 1;\n        const price = product.price;\n        product.total = price;\n\n        this.setState(() => {\n            return {\n                products: [...tempProducts],\n                cart: [...this.state.cart, product],\n                detailProduct: { ...product }\n            };\n        }, this.addTotals);\n    };\n    openModal = id => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return { modalProduct: product, modalOpen: true };\n        });\n    };\n    closeModal = () => {\n        this.setState(() => {\n            return { modalOpen: false };\n        });\n    };\n    increment = id => {\n        let tempCart = [...this.state.cart];\n        const selectedProduct = tempCart.find(item => {\n            return item.id === id;\n        });\n        const index = tempCart.indexOf(selectedProduct);\n        const product = tempCart[index];\n        product.count = product.count + 1;\n        product.total = product.count * product.price;\n        this.setState(() => {\n            return {\n                cart: [...tempCart]\n            };\n        }, this.addTotals);\n    };\n    decrement = id => {\n        let tempCart = [...this.state.cart];\n        const selectedProduct = tempCart.find(item => {\n            return item.id === id;\n        });\n        const index = tempCart.indexOf(selectedProduct);\n        const product = tempCart[index];\n        product.count = product.count - 1;\n        if (product.count === 0) {\n            this.removeItem(id);\n        } else {\n            product.total = product.count * product.price;\n            this.setState(() => {\n                return { cart: [...tempCart] };\n            }, this.addTotals);\n        }\n    };\n    getTotals = () => {\n        // const subTotal = this.state.cart\n        //   .map(item => item.total)\n        //   .reduce((acc, curr) => {\n        //     acc = acc + curr;\n        //     return acc;\n        //   }, 0);\n        let subTotal = 0;\n        this.state.cart.map(item => (subTotal += item.total));\n        const tempTax = subTotal * 0.1;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subTotal + tax;\n        return {\n            subTotal,\n            tax,\n            total\n        };\n    };\n    addTotals = () => {\n        const totals = this.getTotals();\n        this.setState(\n            () => {\n                return {\n                    cartSubTotal: totals.subTotal,\n                    cartTax: totals.tax,\n                    cartTotal: totals.total\n                };\n            },\n            () => {\n                // console.log(this.state);\n            }\n        );\n    };\n    removeItem = id => {\n        let tempProducts = [...this.state.products];\n        let tempCart = [...this.state.cart];\n\n        const index = tempProducts.indexOf(this.getItem(id));\n        let removedProduct = tempProducts[index];\n        removedProduct.inCart = false;\n        removedProduct.count = 0;\n        removedProduct.total = 0;\n\n        tempCart = tempCart.filter(item => {\n            return item.id !== id;\n        });\n\n        this.setState(() => {\n            return {\n                cart: [...tempCart],\n                products: [...tempProducts]\n            };\n        }, this.addTotals);\n    };\n    clearCart = () => {\n        this.setState(\n            () => {\n                return { cart: [] };\n            },\n            () => {\n                this.setProducts();\n                this.addTotals();\n            }\n        );\n    };\n    render() {\n        return (\n            <ProductContext.Provider\n                value={{\n                    ...this.state,\n                    handleDetail: this.handleDetail,\n                    addToCart: this.addToCart,\n                    openModal: this.openModal,\n                    closeModal: this.closeModal,\n                    increment: this.increment,\n                    decrement: this.decrement,\n                    removeItem: this.removeItem,\n                    clearCart: this.clearCart\n                }}\n            >\n                {this.props.children}\n            </ProductContext.Provider>\n        );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };\n"]},"metadata":{},"sourceType":"module"}